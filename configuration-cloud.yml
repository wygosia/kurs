apiVersion: v1
kind: Pod
metadata:
  name: configuration-po
spec:
  containers:
    - image: wurstmeister/zookeeper
      name: zookeeper
    - image: wurstmeister/kafka
      name: kafka
      env:
        - name: KAFKA_ADVERTISED_HOST_NAME
          value: localhost
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: localhost:2181
      ports:
        - containerPort: 9092
          name: kafka
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: config-server
spec:
  replicas: 4
  selector:
    matchLabels:
      app-name: config-server
  template:
    metadata:
      labels:
        app-name: config-server
    spec:
      containers:
        - name: configuration-server
          image: landrzejewski/configuration-server
          ports:
            - containerPort: 8888
          envFrom:
            - configMapRef:
                name: configuration-map
---
apiVersion: v1
kind: Service
metadata:
  name: configuration-service
spec:
  type: LoadBalancer
  selector:
    app-name: configuration-po
  ports:
    - port: 9092
      targetPort: kafka
---

departments-database:
  image: postgres:12-alpine
  environment:
    - POSTGRES_DB=departments
    - POSTGRES_USER=admin
    - POSTGRES_PASSWORD=admin
    - PGDATA=/var/lib/postgresql/data/db


apiVersion: apps/v1
kind: Deployment
metadata:
  name: departments-server
spec:
  replicas: 4
  selector:
    matchLabels:
      app-name: departments-server
  template:
    metadata:
      labels:
        app-name: departments-server
    spec:
      containers:
        - name: departments-server
          image: landrzejewski/departments
          ports:
            - containerPort: 8000
          envFrom:
            - configMapRef:
                name: configuration-map
---
apiVersion: v1
kind: Service
metadata:
  name: config-server-service
spec:
  type: LoadBalancer
  selector:
    app-name: config-server
  ports:
    - port: 8888
      targetPort: config-server
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: departments-volume
spec:
  resources:
    requests:
      storage: 1Gi
  accessModes:
    - ReadWriteMany
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app-name: postgres
  template:
    metadata:
      name: postgres
      labels:
        app-name: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:11.1
          ports:
            - containerPort: 5432
              protocol: TCP
          envFrom:
            - configMapRef:
                name: configuration-map
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: storage
      volumes:
        - name: storage
          persistentVolumeClaim:
            claimName: departments-volume
---
apiVersion: v1
kind: Service
metadata:
  name: departments-database
spec:
  ports:
    - port: 5432
      targetPort: 5432
  selector:
    app-name: postgres
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: configuration-map
data:
  KAFKA_ADVERTISED_HOST_NAME: localhost
  KAFKA_ZOOKEEPER_CONNECT: localhost:2181
  KAFKA_SERVER: 'configuration-service'
  KAFKA_PORT: '9092'
  CONFIGURATION_SERVER: 'config-server-service'
  CONFIGURATION_SERVER_PORT: '8888'
  DB_HOST: "departments-database"
  POSTGRES_DB: departments
  POSTGRES_USER: admin
  POSTGRES_PASSWORD: admin
  SLEEP_TIME: '1'
  DEFAULT_PROFILE: 'production'
  
